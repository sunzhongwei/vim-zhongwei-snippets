snippet golang "go" i
package main

import (
	"fmt"
)

func main() {
	fmt.Println("Hello world")
}
endsnippet

snippet print "go" i
fmt.Println(${1:VAR})
endsnippet

snippet log "go" i
log.Println(${1:VAR})
endsnippet

snippet for "go" i
for i := 0; i < 10; i++ {
}
endsnippet

snippet err "go" i
if err != nil {
    log.Fatal("Error")
}
endsnippet

snippet kv "go" i
"${1:KEY}" : $1,
endsnippet

snippet import_test "go" i
import (
    "testing"
    "github.com/stretchr/testify/assert"
)
endsnippet

snippet test "go" i
func Test${1:Function}(t *testing.T) {
    assert.Equal(t, ${2:VALUE}, $1("arg"))
}
endsnippet

snippet trim "go" i
strings.TrimSpace(${1:VAR});
endsnippet

snippet now_string "go" i
time.Now().Format("2006-01-02 15:04:05")
endsnippet

snippet now "go" i
time.Now()
endsnippet

snippet func "go" i
func ${1:name}(${2:var} string) {
    ${3://TODO}	
}
endsnippet

snippet int "go" i
strconv.Atoi(${1:STRING})
endsnippet

snippet split "go" i
strings.Split(${1:STRING}, ",")
endsnippet

snippet append "go" i
$1 = append(${1:SLICE}, ${2:ITEM})
endsnippet
