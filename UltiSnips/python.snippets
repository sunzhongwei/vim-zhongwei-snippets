snippet open_file "python" i
with open('${1:FILE}', 'r') as f:
    for line in f:
        print line
endsnippet

snippet open_file_json "python" i
import json

with open('strings.json') as f:
    d = json.load(f)
    print(d)
endsnippet

snippet csv "python" i
import csv

rows = []

with open("student.csv", 'w', newline='') as myfile:
    wr = csv.writer(myfile, quoting=csv.QUOTE_ALL)
    for row in rows:
        wr.writerow(row)
endsnippet

snippet python3 "python" i
#!/usr/bin/env python3

if '__main__' == __name__:
    print("Hello world!")
endsnippet

snippet python2 "python" i
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# ----------------------------------------
# Just say "Hello world!".
# ----------------------------------------


# ----------------------------------------
# test cases
# ----------------------------------------
def run_doctest():
    '''python -B <__file__> -v
    '''
    import doctest
    doctest.testmod()


if '__main__' == __name__:
    print "Hello world!"
endsnippet

snippet doc "python" i
# ----------------------------------------
# ${1:DOC}
# ----------------------------------------
endsnippet

snippet for "python" i
for ${1:item} in $1s:
    print($1)
endsnippet

snippet def "python" i
def ${1:FUNCTION_NAME}():
    print("Hello")
endsnippet

snippet sleep "python" i
import time
time.sleep(${1:2})      # sleep $1 seconds
endsnippet

snippet try "python" i
try:
    print(555)
except Exception as e:
    print("type error: " + str(e))
    print(traceback.format_exc())

import traceback
endsnippet

snippet log "python" i
logger.info("${1:hello}")
endsnippet

snippet request_get "python" i
url = ""
response = requests.get(url)

if response.status_code == 200:
    data = response.json()
    print(data)
    if data.code == 100:
        pass
    else:
        print(f"Error code: {data.code}; Error message: {data.msg}")
else:
    # 如果响应状态码不是200，则输出错误信息
    print("Error: ", response.status_code)
endsnippet
