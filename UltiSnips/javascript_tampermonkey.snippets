snippet tm_click_btn "javascript_tampermonkey" i
$('input[value="提交答案"]').click();
endsnippet

snippet tm_find_one "javascript_tampermonkey" i
let status = $(value).find("td:nth-child(6)").first();
let text = $(status).text().trim();
endsnippet

snippet tm_get "javascript_tampermonkey" i
GM_getValue("${1:KEY}", ${2:DEFAULT})
endsnippet

snippet tm_set "javascript_tampermonkey" i
GM_setValue("${1:KEY}", ${2:VALUE})
endsnippet

snippet tm_error "javascript_tampermonkey" i
throw new Error("Stopped JavaScript.");
endsnippet

snippet tm_display "javascript_tampermonkey" i
style.display   // != "none"
endsnippet

snippet tm_location_change "javascript_tampermonkey" i
window.location.href = ${1:NEW_URL};
throw new Error("Stopped JavaScript.");
endsnippet

snippet tm_http_get "javascript_tampermonkey" i
GM_xmlhttpRequest({
  method:     "GET",
  url:        "",
  onload:     function (response) {
    console.log(response.responseText);
    var rsp = JSON.parse(response.responseText);
    if (rsp.code != 200) {
      console.log("error: rsp code " + rsp.code);
      return;
    }
  }
});
endsnippet

snippet tm_http_post "javascript_tampermonkey" i
let data = {
};
GM_xmlhttpRequest({
  method:     "POST",
  url:        "",
  data:       data,
  onload:     function (response) {
    console.log(response.responseText);
    var rsp = JSON.parse(response.responseText);
    if (rsp.code != 200) {
      console.log("error: rsp code " + rsp.code);
      return;
    }
  }
});
endsnippet

snippet tm_http_sync "javascript_tampermonkey" i
// @grant        GM_xmlhttpRequest
// @connect      localhost
// @connect      127.0.0.1

(async () => {
  let rsp = await tmHttp("");
  rsp = JSON.parse(rsp);
  if (rsp.code != 200) {
    console.log("error: rsp code " + rsp.code);
    return;
  }
})();

function tmHttp(url, method = "GET", data = {}) {
  return new Promise((resolve, reject) => {
    GM_xmlhttpRequest({
      method: method,
      url: url,
      data: data,
      onload: function(response) {
        resolve(response.responseText);
      },
      onerror: function(error) {
        reject(error);
      }
    });
  });
}
endsnippet
