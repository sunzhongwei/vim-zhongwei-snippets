snippet tm_click_btn "javascript_tampermonkey" i
$('input[value="提交答案"]').click();
endsnippet

snippet tm_find_one "javascript_tampermonkey" i
let status = $(value).find("td:nth-child(6)").first();
let text = $(status).text().trim();
endsnippet

snippet tm_get "javascript_tampermonkey" i
GM_getValue("${1:KEY}", ${2:DEFAULT})
endsnippet

snippet tm_set "javascript_tampermonkey" i
GM_setValue("${1:KEY}", ${2:VALUE})
endsnippet

snippet tm_error "javascript_tampermonkey" i
throw new Error("Stopped JavaScript.");
endsnippet

snippet tm_display "javascript_tampermonkey" i
style.display   // != "none"
endsnippet

snippet tm_redirect "javascript_tampermonkey" i
window.location.href = ${1:NEW_URL};
throw new Error("Stopped JavaScript.");
endsnippet

snippet tm_redirect_hash "javascript_tampermonkey" i
unsafeWindow.location.href = "${1:NEW_URL}";
window.location.reload(true)
throw new Error("Stopped JavaScript.");
endsnippet

snippet tm_http_get "javascript_tampermonkey" i
GM_xmlhttpRequest({
  method:     "GET",
  url:        "",
  onload:     function (response) {
    console.log(response.responseText);
    var rsp = JSON.parse(response.responseText);
    if (rsp.code != 200) {
      console.log("error: rsp code " + rsp.code);
      return;
    }
  }
});
endsnippet

snippet tm_http_post "javascript_tampermonkey" i
let data = {
};
GM_xmlhttpRequest({
  method:     "POST",
  url:        "",
  data:       data,
  onload:     function (response) {
    console.log(response.responseText);
    var rsp = JSON.parse(response.responseText);
    if (rsp.code != 200) {
      console.log("error: rsp code " + rsp.code);
      return;
    }
  }
});
endsnippet

snippet tm_http_sync_wrap "javascript_tampermonkey" i
// @grant        GM_xmlhttpRequest
// @connect      localhost
// @connect      127.0.0.1

(async () => {
  let rsp = await tmHttp("");
  rsp = JSON.parse(rsp);
  if (rsp.code != 0) {
    console.log("error: rsp code " + rsp.code);
    return;
  }
})();

function tmHttp(url, method = "GET", data = {}) {
  return new Promise((resolve, reject) => {
    GM_xmlhttpRequest({
      method: method,
      url: url,
      data: JSON.stringify(data),
      headers: {
        'Accept': 'application/json',
        "Content-Type": "application/json",
      },
      onload: function(response) {
        resolve(response.responseText);
      },
      onerror: function(error) {
        reject(error);
      }
    });
  });
}
endsnippet

snippet tm_http "javascript_tampermonkey" i
let apiUrl = server_host + "/api/";
let data = {
};
let rsp = await tmHttp(apiUrl, "POST", data);
console.log(rsp);
rsp = JSON.parse(rsp)
if (rsp.err_code == 0) {
  // TODO
}
endsnippet

snippet tm_handler_interval "javascript_tampermonkey" i
setInterval(() => {
  (async () => {
    await wait(500);
  })();
}, 10000);
endsnippet

snippet tm_handler_while "javascript_tampermonkey" i
(async () => {
  while (true) {
    await wait(3000);
  }
})();
endsnippet

snippet tm_disable_alert "javascript_tampermonkey" i
function disableAlert() {
  unsafeWindow.alert = function(){return false};
  window.alert = function(){return false};
  Window.prototype.alert = function(){return false};

  unsafeWindow.confirm = function(){return true};
  window.confirm = function(){return true};
  Window.prototype.confirm = function(){return true};
}
endsnippet
