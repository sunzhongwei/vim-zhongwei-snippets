snippet page "Description" i
Page({
  data: {
    text: "This is page data."
  },

  onLoad: function(options) {
    // Do some initialize when page load.
  },

  onReady: function() {
    // Do something when page ready.
  },

  onShow: function() {
    // Do something when page show.
  },
})
endsnippet

snippet request "Description" i
const app = getApp()

wx.request({
	url: \`${app.globalData.host}/api/${1:API}\`,
	method: 'GET',
	data: {
		x: '',
		y: ''
	},
	header: {
		'content-type': 'application/json'
	},
	success: res => {
		console.log(res.data)
	}
})
endsnippet

snippet value "Description" i
e.detail.value
endsnippet

snippet global "Description" i
getApp().globalData.${1:VAR}
endsnippet

snippet wx_set "Description" i
this.setData({
	${1:KEY}: this.data.$1 
})
endsnippet

snippet wx_modal "Description" i
wx.showModal({
  title: '提示',
  content: '这是一个模态弹窗',
  confirmText: "确定",
  showCancel: false,
  cancelText: "取消",
  success: res => {
    if (res.confirm) {
      console.log('用户点击确定')
    } else if (res.cancel) {
      console.log('用户点击取消')
    }
  }
})
endsnippet

snippet data "Description" i
this.data.${1:VAR}
endsnippet

snippet wx_storage_set "javascript_wx" i
wx.setStorageSync('${1:KEY}', '${2:VALUE}')
endsnippet

snippet wx_storage_get "javascript_wx" i
wx.getStorageSync('${1:KEY}')
endsnippet

snippet bind_input "javascript_wx" i
bind${1:KEY}Input: function(e) {
    this.setData({
        $1: e.detail.value
    })
},

bindinput="bind$1Input"
endsnippet

snippet wx_toast "javascript_wx" i
wx.showToast({
  title: '成功',
  icon: 'success',  // or 'none'
  duration: 2000
});
endsnippet

snippet scroll_to_top "javascript_wx" i
if (wx.pageScrollTo) {
  wx.pageScrollTo({
    scrollTop: 0
  })
}
endsnippet

snippet wx_http "javascript_wx" i
let data = {
};
app.http({
  url: "${1:URL}",
  method: "GET",
  param: data,
}).then(res => {
  console.log(res);
});
endsnippet

snippet wx_navigate "javascript_wx" i
wx.navigateTo({
  url: '/pages/${1:PAGE}/$1'
})
endsnippet

snippet navigate_back "javascript_wx" i
wx.navigateBack()
endsnippet

snippet function_wx "javascript_wx" i
${1:NAME}: function(e) {
    console.log(e.currentTarget.dataset.name);
},
endsnippet

snippet e_data "javascript_wx" i
e.currentTarget.dataset.name
endsnippet

snippet e_input_change "javascript_wx" i
e.detail.value
endsnippet

snippet wx_app "javascript_wx" i
const app = getApp()
endsnippet

snippet wx_share "javascript_wx" i
return {
  title: '',
  path: '/pages/index/index?id=123',
  imageUrl: ''
}
endsnippet

snippet share_function "javascript_wx" i
onShareAppMessage: function () {

},
endsnippet

snippet share_timeline "javascript_wx" i
onShareTimeline: function () {
	return {
	  title: "",
	}
},
endsnippet

snippet wx_options "javascript_wx" i
let id = options.id;
this.setData({
  id: parseInt(id)
})
endsnippet

snippet wx_parse_scene "javascript_wx" i
// onLoad
if (options.scene) {
  // 微信扫码进入
  // 示例：qid=999135&uid=12
  // 测试编译参数，通过 encodeURIComponent 得到
  // scene=qid%3D999135%26uid%3D12
  var scene = decodeURIComponent(options.scene);
  var arrPara = scene.split("&");
  var params = {};
  for (let param of arrPara) {
    let arr = param.split("=");
    params[arr[0]] = arr[1];
  }

  this.setData({
    deviceId: parseInt(params["device_id"])
  })
} else {
  // 小程序内跳转过来
  let id = options.id;
  this.setData({
    deviceId: parseInt(id)
  })
}

this.getDeviceInfo();
endsnippet

snippet wx_scan "javascript_wx" i
goScan: function() {
  wx.scanCode({
    success: res => {
      console.log(res)
      let path = res.path;
      let deviceId = this.parseScanPath(path);
      // TODO
      this.getSomething(deviceId);
    },
    fail: res => {
      wx.showToast({
        title: '无法解析',
        icon: 'none',  // or 'none'
        duration: 2000
      });
    },
  })
},

/**
 * - iOS表现：path: "pages/share/share?scene=sid%3D19"
 * - Android表现：path: "pages/share/share?scene=sid=19"
 **/
parseScanPath: function(path) {
  let items = path.split("%3D");
  if (items.length == 2) {
    return items[1];
  } else {
    let item2s = path.split("=");
    return item2s[item2s.length - 1];
  }
},
endsnippet

snippet wx_require "javascript_wx" i
const util = require('../../utils/util.js');
endsnippet

snippet img_error "javascript_wx" i
binderror="imgError" data-index='{{index}}'

imgError: function(e) {
  var index = parseInt(e.currentTarget.dataset.index)
  this.setData({
    [`avatars[${index}]`]: '/images/default_avatar.png'
  })
},
endsnippet

snippet switch_tab "javascript_wx" i
wx.switchTab({
    url: '/pages/${1:VALUE}/$1'
})
endsnippet

snippet wx_choose_address "javascript_wx" i
wx.chooseAddress({
  success (res) {
    console.log(res.userName)
    console.log(res.postalCode)
    console.log(res.provinceName)
    console.log(res.cityName)
    console.log(res.countyName)
    console.log(res.detailInfo)
    console.log(res.nationalCode)
    console.log(res.telNumber)
  }
})
endsnippet

snippet wx_set_title "javascript_wx" i
wx.setNavigationBarTitle({
	title: ${1:TITLE} 
})
endsnippet

snippet wx_last_page_setting "javascript_wx" i
let pages = getCurrentPages();
let lastPage = pages[pages.length - 2];
lastPage.setData(data);
wx.navigateBack();
endsnippet

snippet wx_setClipboardData "javascript_wx" i
wx.setClipboardData({
  data: 'data',
  success (res) {
  }
})
endsnippet

snippet wx_open_location "javascript_wx" i
wx.openLocation({
  latitude: Number(this.data.info.lat),
  longitude: Number(this.data.info.lng),
  scale: 10,
  name: this.data.info.name,
  address: this.data.info.address,
})
endsnippet

snippet wx_get_location "javascript_wx" i
// app.json
"permission": {
    "scope.userLocation": {
      "desc": "您的位置信息将用于被您老婆随时监控" 
    }
}
wx.getLocation({
 type: 'gcj02',     // GCJ02 坐标系。即火星坐标系，WGS84坐标系加密后的坐标系；Google国内地图、高德、QQ地图使用
 success: res => {
   console.log(res)
   const lat = res.latitude
   const lng = res.longitude
 }
})
endsnippet

snippet wx_sub_message "javascript_wx" i
if (wx.requestSubscribeMessage) {
  wx.requestSubscribeMessage({
      tmplIds: [''],
      success: res => {
      },
      fail: res => {
      },
      complete: res => {
		// TODO
      }
  })
} else {
  // TODO
}
endsnippet

snippet wx_loading "html_wxml" i
wx.showLoading({title:'${1:TITLE}'});
wx.hideLoading();
endsnippet

snippet set_title "javascript_wx" i
wx.setNavigationBarTitle({
  title: '${1:TITLE}'
})
endsnippet

snippet disable_share "javascript_wx" i
// 1. del onShareAppMessage
// 2. append to onLoad 
wx.hideShareMenu();
endsnippet

snippet audio "javascript_wx" i
const innerAudioContext = wx.createInnerAudioContext()
innerAudioContext.autoplay = true
innerAudioContext.src = '/test.mp3'		// 可以使用 URL
innerAudioContext.onPlay(() => {
  console.log('开始播放')
})
innerAudioContext.onError((res) => {
  console.log(res.errMsg)
  console.log(res.errCode)
})
endsnippet

snippet wx_clipboard_set "javascript_wx" i
wx.setClipboardData({
  data: this.data.shareContent,
  success (res) {
    wx.showToast({
      title: '复制成功',
      icon: 'success',  // or 'none'
      duration: 2000
    });
  }
})
endsnippet

snippet wx_text_selectable "javascript_wx" i
<text user-select="{{true}}">{{content}}</text>
endsnippet

snippet wx_prevent_duplicate_click "javascript_wx" i
// data
requesting: false,

// on click
if (this.data.requesting) {
  return;
}
this.setData({
  requesting: true,
})

// complete 
this.setData({
  requesting: false,
})
endsnippet

snippet wx_pull_down_refresh "javascript_wx" i
// json
"enablePullDownRefresh": true,
"backgroundColor": "#fff",
"backgroundTextStyle": "dark",

// js
onPullDownRefresh: function() {
  //this.reset();
  wx.stopPullDownRefresh();
},
endsnippet

snippet wx_tel "javascript_wx" i
wx.makePhoneCall({
  phoneNumber: ${1:Tel} 
})
endsnippet

snippet wx_submit "javascript_wx" i
submit: function() {
  if (!this.validate()) {
    return;
  }
},

validate: function() {
  if (!this.data.formData.name) {
    wx.showToast({
      title: '请输入联系人姓名',
      icon: 'none',  // or 'none'
      duration: 2000
    });
    return false;
  }

  return true;
},
endsnippet

snippet wx_open_file "javascript_wx" i
wx.showLoading({title:'下载中'});
wx.downloadFile({
  url: this.data.${1:FILE},
  success: function (res) {
    const filePath = res.tempFilePath
    wx.openDocument({
      filePath: filePath,
      success: function (res) {
        console.log('打开文档成功')
      }
    })
  },
  complete: () => {
    wx.hideLoading();
  }
})
endsnippet

snippet wx_preview "javascript_wx" i
wx.previewImage({
  current: ${1:imageUrl},  // 当前显示图片的 http 链接
  urls: [imageUrl],  // 需要预览的图片 http 链接列表
})
endsnippet
