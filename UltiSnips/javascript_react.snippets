snippet react_use_effect "javascript_react" i
useEffect(() => {
  ${1:// TODO}

  // componentWillUnmount
  return () => {
  };
}, []);     // same as componentDidMount; 当 useEffect 没有第二个参数时,组件的初始化和更新都会执行
endsnippet

snippet react_use_state "javascript_react" i
const [${1:data}, set${1/\w+\s*/\u$0/}] = useState(0);
endsnippet

snippet react_if "javascript_react" i
{${1:Condition} &&
}
endsnippet

snippet react_get_data "javascript_react" i
import React, { useState, useEffect } from 'react'
import { getItems } from '@/services/ant-design-pro/api';

const [data, setData] = useState({});

useEffect(() => {
  getData()
  const timer = setInterval(getData, 10000)
  return () => clearInterval(timer)
}, [])

function getData() {
  (async () => {
    let data = await getItems();
    setData(data)
  })();
}
endsnippet

snippet react_comment "javascript_react" i
{/*
*/}
endsnippet

snippet react_click "javascript_react" i
onClick={${1:click}Handler}

function $1Handler() {
}
endsnippet

snippet react_ref "javascript_react" i
ref={${1:someRef}}

const $1Ref = React.createRef<FormInstance<API.${2:User}>>();
endsnippet

snippet react_component "javascript_react" i
import { Upload, Button, message } from 'antd';
import { UploadOutlined } from '@ant-design/icons';
import type { UploadProps } from 'antd';

/**
 * 使用方法
import UploadFile from '@/components/UploadFile';
<Form.Item name="KeyFile" label="apiclient_key.pem">
  <UploadFile />
</Form.Item>
 * */
function UploadFile(props: any) {
  const uploadProps: UploadProps = {
    action: props.action || '/api/uploadFile',
    maxCount: props.maxCount || 1,
    onChange(info) {
      if (info.file.status === 'done') {
        const rsp = info.file.response;
        if (rsp.err_code === 0) {
          message.success(`${info.file.name} 文件上传成功`);
          // 调用父组件 onChange 方法, 将新值传递回去
          props.onChange(rsp.data);
        } else {
          message.error(`${info.file.name} 文件上传失败`);
        }
      } else if (info.file.status === 'error') {
        message.error(`${info.file.name} 文件上传失败`);
      }
    },
  };

  return (
    <Upload {...uploadProps}>
      <Button icon={<UploadOutlined />}>点击上传文件</Button>
    </Upload>
  );
}

export default UploadFile;
endsnippet
