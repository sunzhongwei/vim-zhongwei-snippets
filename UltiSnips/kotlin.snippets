snippet kotlin "kotlin" i
fun main(args: Array<String>) {
    println("Hello, World!")
}
endsnippet

snippet find_view_by_id "kotlin" i
findViewById(R.id.${1:ID})
endsnippet

snippet find "kotlin" i
lateinit var resultTextView: TextView
resultTextView = findViewById(R.id.btn_result)
endsnippet

snippet on_click "kotlin" i
setOnClickListener {
    ${1://TODO}
}
endsnippet

snippet toast "kotlin" i
Toast.makeText(this, "button clicked",
	Toast.LENGTH_SHORT).show()
endsnippet

snippet func "kotlin" i
public fun ${1:FUNCTION_NAME}(view: View) {
    ${2://TODO}
}
endsnippet

snippet random "kotlin" i
Random().nextInt(${1:INT})
endsnippet

snippet set_image "kotlin" i
setImageResource(${1:ID})
endsnippet

snippet when "kotlin" i
when (randomInt) {
   1 -> R.drawable.dice_1
   2 -> R.drawable.dice_2
   else -> R.drawable.dice_6
}
endsnippet

snippet hide_keyboard "kotlin" i
// Hide the keyboard.
val imm = getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager
imm.hideSoftInputFromWindow(view.windowToken, 0)
endsnippet

snippet show_keyboard "kotlin" i
// Set the focus to the edit text.
editText.requestFocus()

// Show the keyboard.
val imm = getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager
imm.showSoftInput(editText, 0)
endsnippet

snippet if "kotlin" i
if (${1:CONDITION}) {
    ${2://TODO}
}
endsnippet
