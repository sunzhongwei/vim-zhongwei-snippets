snippet fields "Description" i
// TODO: comment setFromDB

$id = [
	'name' => 'id',
	'label' => 'ID',
];

$created_at = [
	'name'    => 'created_at',
	'label'   => '创建时间',
	'searchLogic' => false,
];

$updated_at = [
	'name'    => 'updated_at',
	'label'   => '更新时间',
	'searchLogic' => false,
];

// table view
$this->crud->addColumns([
	$id, 
	$created_at, $updated_at,
]); 

// detail view for create/update
$this->crud->addFields([
]); 

$this->crud->enableAjaxTable();
$this->crud->orderBy('id', 'desc');
endsnippet

snippet search_fix "php_laravel_backpack" i
'searchLogic' => false,
endsnippet

snippet field "Description" i
$${1:VAR} = [
	'name'    => '$1',
	'label'   => '${3:LABEL}',
	'default' => '${4:DEFAULT}',
    'hint'    => 'Some hint text',
    'attributes' => [
        'readonly'=>'readonly',
    ],
];
endsnippet

snippet fake "Description" i
'fake'     => true,
'store_in' => 'extras',
endsnippet

snippet money "Description" i
'type'       => 'number',
'attributes' => ["step"   => "any"],  // allow decimals
'prefix'     => "￥",
'suffix'     => "元",
endsnippet

snippet tips "Description" i
'hint' => '${1:STRING}',
endsnippet

snippet readonly "Description" i
'attributes' => [
	'readonly'=>'readonly',
]
endsnippet

snippet map "Description" i
'type' => 'select_from_array',
'options' => Order::$payed_status_map,
endsnippet

snippet radio "Description" i
'type' => 'radio',
'options' => [
	0 => "否",
	1 => "是"
],
'inline' => true,
endsnippet

snippet relation "php_laravel_backpack" i
'type'      => 'select2',
'entity'    => '${1:relation}',
'attribute' => 'name',
'model'     => 'App\Models\\${2:Model}',

// TODO: relation function in model
public function $1()
{
	return $this->belongsTo('App\Models\\$2', '$1_id');
}
endsnippet

snippet model_function "php_laravel_backpack" i
'type' => "model_function",
'function_name' => 'get_${1:field}_col',

// TODO: move the function to model 
public function get_$1_col() {
	if ($this->$1 == 0) {
		return '<span class="label label-warning">未确认</span>';
	} else {
		return '<span class="label label-info">已确认</span>';
	}
}
endsnippet

snippet config "php_laravel_backpack" i
Config::get('settings.${1:CONFIG}')
endsnippet

snippet change_status_button "php_laravel_backpack" i
// CRUD Controller
$this->crud->addButtonFromModelFunction('line', 'change_status', 'change_status', 'end');

public function change_channel_status(Request $request, $id, $status) {
    $rsp = ['err_code' => 0, 'err_msg' => 'OK',];

    $item = Channel::find($id);
    $item->status = $status;
    $item->save();

    return response()->json($rsp);
}

// Model
public function change_status($crud = false)
{
    $html = '';
    if ($this->status == 1) {
        $html = '<a onclick="change_channel_status('.$this->id.', 0)" class="btn btn-xs btn-danger"><i class="fa fa-lock"></i> 禁用</a>';
    } else {
        $html = '<a onclick="change_channel_status('.$this->id.', 1)" class="btn btn-xs btn-primary"><i class="fa fa-unlock"></i> 恢复</a>';
    }

    return $html;
}

// my_app.js
function change_channel_status(id, status) {
    var msg = '';
    if (status == 0) {
        msg = '确认要禁用该渠道？禁用之后，该渠道将无法分佣，也无法提现!';
    } else {
        msg = '确认要恢复该渠道？';
    }

	var con = confirm(msg);

	if (con) {
		$.ajax({
			url: "change_channel_status/" + id + "/" + status,
			type: 'post',
			dataType: 'json',
			success: function (data) {
				if(data.err_code == 0){
					alert("操作成功!");
					window.location.reload()
				}  else{
					alert("操作失败!");
				}
			}
		});
	}
}

// Route admin
Route::post('change_channel_status/{id}/{status}', 'ChannelCrudController@change_channel_status');
endsnippet

snippet table_backpack "php_laravel_backpack" i
'type'            => 'table',
'entity_singular' => '${1:ADD_BUTTON_NAME}',    // used on the "Add X" button
'columns'         => [
    'name'  => '名称',
    'price' => '价格',
],
endsnippet
